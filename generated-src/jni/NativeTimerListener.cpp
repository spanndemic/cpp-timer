// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from cpptimer.djinni

#include "NativeTimerListener.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeTimerListener::NativeTimerListener() : ::djinni::JniInterface<::cpptimer::TimerListener, NativeTimerListener>() {}

NativeTimerListener::~NativeTimerListener() = default;

NativeTimerListener::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeTimerListener::JavaProxy::~JavaProxy() = default;

void NativeTimerListener::JavaProxy::TimerTicked(int32_t c_seconds_remaining) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeTimerListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_timerTicked,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_seconds_remaining)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeTimerListener::JavaProxy::TimerEnded() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeTimerListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_timerEnded);
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
